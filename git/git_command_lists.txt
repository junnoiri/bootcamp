Git command lists
リポジトリ作成などに使うコマンド
- clone
  リポジトリをコピーする。
「git clone」コマンドを実行すると、既存リポジトリを指定したディレクトリへコピーします。

- pull
「git pull」は、リモートリポジトリの変更内容を指定したローカルリポジトリにマージ（統合）するコマンドです。
チーム開発で他の人がリモートリポジトリに入れた変更内容を、ローカルリポジトリに取り込むために使われます。

- push
「git push」はgit pullの反対で、指定したローカルリポジトリの変更内容をリモートリポジトリにマージするコマンドです。
自分の変更内容をチーム開発用のリモートリポジトリにアップロードするために使われます。
git pushコマンドを実行する前には「git diff」コマンドにより差分のある箇所を確認する必要がある。

- fetch
git fetchコマンドを使うと、リポジトリから最新の情報を取得することができます。
リポジトリの最新情報を取得するだけで、現在のローカルのソースコードが変更されません。
git pullコマンドの方は使用すると、git fetchとgit mergeが動くので、最新のソースコードが変わります。
git fetchコマンドは最新のソースコードの状況を確認したり、最新のブランチを取得したいときなどに使います。

コミットを操作するコマンド
コミット」は、ローカルリポジトリに自分が変更した内容を入れ込むことです。
コミットされたローカルリポジトリの変更内容が、前述のpushコマンド実行時にリモートリポジトリへマージされます。
コミット時には、変更者・変更日時・変更内容といった情報が変更履歴として記録されます。

- add
「git add」は、新たに追加/変更/削除したファイルをインデックスに追加するコマンドです。
コミット時にはインデックスに追加されたファイルがすべてローカルリポジトリに加えられます。

- commit
「git commit」は、インデックスに存在するすべてのファイルをコミット（ローカルリポジトリにマージ）するコマンドです。
新たに追加したファイルは、コミットすることで初めてGitの管理対象に加えられます。

- log
「git log」は、ローカルリポジトリに自分がコミットした履歴を表示するコマンドです。
さまざまな変更をコミットした際でも、このコマンドを使用し、後から開発状況を把握できます。

- status
「git status」は、指定したディレクトリ内に下記いずれかの条件を満たすファイルがあれば、一覧で表示するコマンドです。
* Gitの管理対象に含まれていない（新たに追加した）ファイル
* インデックスに追加されたが、まだコミットされていないファイル
* インデックスに追加されていないが、変更されているファイル

- diff
「git diff」は、ワークツリー内の指定ファイルをリモートリポジトリのものと比較して、差分のある箇所を表示するコマンドです。
git pushコマンドにより自分の変更をマージする前に、必ずこのコマンドで差分確認する必要がある。


ブランチを操作するコマンド
- branch
ブランチの作成／一覧表示　「git branch」コマンドを使うと、現在処理対象となっているブランチを基にして新たなブランチを作成可能です。

- checkout
Gitでは処理対象のブランチが決められています。処理対象のブランチを切り替えるために使うのが「git checkout」コマンドです。
ブランチを切り替えた後にコミットを行うと、切り替え後のブランチに対して変更履歴が追加されます。
チーム開発で自分の変更をマージする際に良く使われるコマンドです。

- merge
「git merge」は現在処理しているブランチに、別のブランチから変更点を取り込むコマンドです。
各チームメンバーがブランチで変更した内容を、マスターリポジトリに集約する際に良く使われます。